Index: app/src/main/java/com/example/didaktikapp/fragments/juegos/Fragment1_7_juego.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.didaktikapp.fragments.juegos\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.AnimationDrawable\r\nimport android.media.Image\r\nimport android.media.MediaPlayer\r\nimport android.os.Bundle\r\nimport android.os.CountDownTimer\r\nimport android.os.Handler\r\nimport android.os.Looper\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.MotionEvent\r\nimport android.view.View\r\nimport android.view.View.GONE\r\nimport android.view.ViewGroup\r\nimport android.view.animation.AnimationUtils\r\nimport android.view.animation.TranslateAnimation\r\nimport android.widget.*\r\nimport androidx.constraintlayout.widget.ConstraintLayout\r\nimport androidx.core.view.isVisible\r\nimport androidx.navigation.Navigation\r\nimport com.example.didaktikapp.Model.DragnDropImage\r\nimport com.example.didaktikapp.R\r\nimport com.example.didaktikapp.activities.DbHandler\r\nimport com.example.reto01.Model.User\r\nimport kotlinx.android.synthetic.main.fragment1_7_juego.*\r\nimport kotlinx.coroutines.launch\r\nimport kotlinx.coroutines.runBlocking\r\n\r\n// TODO: Rename parameter arguments, choose names that match\r\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\nprivate const val ARG_PARAM1 = \"param1\"\r\nprivate const val ARG_PARAM2 = \"param2\"\r\n\r\n/**\r\n * A simple [Fragment] subclass.\r\n * Use the [Fragment1_juego.newInstance] factory method to\r\n * create an instance of this fragment.\r\n */\r\nclass Fragment1_7_juego : Fragment() {\r\n    // TODO: Rename and change types of parameters\r\n    private var param1: String? = null\r\n    private var param2: String? = null\r\n\r\n    private lateinit var globalView: View\r\n    private var audio: MediaPlayer? = null\r\n    private var viewActiva = false\r\n    private lateinit var vistaAnimada: TranslateAnimation\r\n    var manzanaList: MutableList<DragnDropImage>? = mutableListOf()\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        arguments?.let {\r\n            param1 = it.getString(ARG_PARAM1)\r\n            param2 = it.getString(ARG_PARAM2)\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        val view = inflater.inflate(R.layout.fragment1_7_juego, container, false)\r\n        globalView = view\r\n        val button: Button = view.findViewById(R.id.btnf1_7_siguiente)\r\n        val ajustes: ImageButton = view.findViewById(R.id.btnf1_7_ajustes)\r\n        button.visibility=GONE\r\n\r\n/*\r\n        val constraintLayoutFound = globalView.findViewById<ConstraintLayout>(R.id.mainlayout)\r\n        var newView: ImageView\r\n        newView = ImageView(requireContext())\r\n        newView.layoutParams.height = 200\r\n        newView.layoutParams.width = 200\r\n        newView.x = 300F\r\n        newView.y = 500F\r\n        newView.setBackgroundColor(Color.BLUE)\r\n\r\n\r\n        //newView.setImageResource(R.drawable.sagarragorria)\r\n\r\n        constraintLayoutFound.addView(newView)\r\n        */\r\n\r\n        button.setOnClickListener(){\r\n            Navigation.findNavController(view).navigate(R.id.action_fragment1_7_juego_to_fragment2_7_minijuego)\r\n        }\r\n        ajustes.setOnClickListener(){\r\n            Navigation.findNavController(view).navigate(R.id.action_fragment1_7_juego_to_fragment4_menu)\r\n        }\r\n\r\n        /*\r\n        // COMENTADO PARA EL DESARROLLO DEL JUEGO\r\n        //Typewriter juego 4 tutorial\r\n        Handler(Looper.getMainLooper()).postDelayed({\r\n            typewriter(view)\r\n        }, 2000)\r\n        //Typewriter juego 4 tutorial fin\r\n        audioTutorial(view)\r\n         */\r\n        finalizarQuickIntro(view)\r\n        return view\r\n    }\r\n\r\n    fun iniciarJuegoRecogerManzanas() {\r\n        startTimeCounter()\r\n    }\r\n\r\n    fun finalizarQuickIntro(view: View) {\r\n        exitAnimationfun(view)\r\n        val img: ImageView = view.findViewById(R.id.imgv1_7_upelio) as ImageView\r\n        img.visibility = GONE\r\n        iniciarJuegoRecogerManzanas()\r\n    }\r\n\r\n    fun audioTutorial(view: View){\r\n\r\n        //Audio juego 4\r\n        var audio: MediaPlayer\r\n        runBlocking() {\r\n            launch {\r\n                audio = MediaPlayer.create(context, R.raw.juego7audiotutorial)\r\n                audio.start()\r\n                audio?.setOnCompletionListener {\r\n                    Handler(Looper.getMainLooper()).postDelayed({\r\n                        //Llama a la funcion para la animacion de salida cuando el audio se termina\r\n                        exitAnimationfun(view)\r\n                    }, 1000)\r\n                }\r\n            }\r\n            //animacion para la descripcion\r\n            starAnimationfun(view)\r\n        }\r\n    }\r\n\r\n    private fun starAnimationfun(view: View) {\r\n        //Animacion fondo gris\r\n        val txtAnimacion = view.findViewById(R.id.txtv1_7_fondogris) as TextView\r\n        val aniFade = AnimationUtils.loadAnimation(context, R.anim.fade)\r\n        txtAnimacion.startAnimation(aniFade)\r\n\r\n        //Animacion entrada upelio\r\n        vistaAnimada = TranslateAnimation(-1000f, 0f, 0f, 0f)\r\n        vistaAnimada.duration = 2000\r\n        val upelio = view.findViewById(R.id.imgv1_7_upelio) as ImageView\r\n        upelio.startAnimation(vistaAnimada)\r\n\r\n        //llamamos a la animacion para animar a upelio\r\n        Handler(Looper.getMainLooper()).postDelayed({\r\n            upelio.isVisible = false\r\n            talkAnimationfun(view)\r\n        }, 2000)\r\n\r\n    }\r\n    private fun exitAnimationfun(view: View) {\r\n        val upelioAnimado = view.findViewById(R.id.imgv1_7_upelio2) as ImageView\r\n        upelioAnimado.isVisible = false\r\n\r\n        //Animacion upelio salido\r\n        vistaAnimada = TranslateAnimation(0f, 1000f, 0f, 0f)\r\n        vistaAnimada.duration = 2000\r\n\r\n        //VistaAnimada.fillAfter = true\r\n        val upelio = view.findViewById(R.id.imgv1_7_upelio) as ImageView\r\n        upelio.startAnimation(vistaAnimada)\r\n\r\n        //Animacion fondo gris\r\n        Handler(Looper.getMainLooper()).postDelayed({\r\n            val txtAnimacion = view.findViewById(R.id.txtv1_7_fondogris) as TextView\r\n            val aniFade = AnimationUtils.loadAnimation(context, R.anim.fade_out)\r\n            txtAnimacion.startAnimation(aniFade)\r\n            txtv1_7_tutorialjuego4.startAnimation(aniFade)\r\n            txtv1_7_tutorialjuego4.isVisible = false\r\n            txtAnimacion.isVisible = false\r\n        }, 1000)\r\n    }\r\n\r\n    private fun typewriter(view: View) {\r\n        /*\r\n        val typeWriterView = view.findViewById(R.id.txtv1_7_tutorialjuego4) as TypeWriterView\r\n        typeWriterView.setWithMusic(false)\r\n        typeWriterView.animateText(resources.getString(R.string.juego4tutorial))\r\n        typeWriterView.setDelay(65)\r\n\r\n         */\r\n    }\r\n    private fun talkAnimationfun(view: View) {\r\n        val upelio = view.findViewById(R.id.imgv1_7_upelio2) as ImageView\r\n        upelio.setBackgroundResource(R.drawable.animacion_manzana)\r\n        val ani = upelio.background as AnimationDrawable\r\n        ani.start()\r\n    }\r\n\r\n\r\n    override fun onDestroy() {\r\n        audio?.stop()\r\n        super.onDestroy()\r\n    }\r\n\r\n    override fun onStop() {\r\n        audio?.stop()\r\n        super.onStop()\r\n    }\r\n\r\n    fun generarManzana() {\r\n        var imgManzanaGenerada: ImageView = ImageView(requireContext())\r\n        //newView = ImageView(requireContext())\r\n        val constraintLayoutFound = globalView.findViewById<ConstraintLayout>(R.id.mainlayout)\r\n        constraintLayoutFound.addView(imgManzanaGenerada)\r\n        imgManzanaGenerada.layoutParams.height = 200\r\n        imgManzanaGenerada.layoutParams.width = 200\r\n      //  newView.x = 200F\r\n       // newView.y = 200F\r\n        imgManzanaGenerada.x = ((0..globalView.width - 200).random()).toFloat()\r\n        imgManzanaGenerada.y = ((0..globalView.height - 200).random()).toFloat()\r\n        //imgManzanaGenerada.setBackgroundColor(Color.BLUE)\r\n\r\n\r\n        var tipoManzana = (0..1).random()\r\n        var mznGnrDestino: ImageView\r\n        if (tipoManzana == 1) {\r\n            imgManzanaGenerada.setImageResource(R.drawable.sagarragorria)\r\n            mznGnrDestino = globalView.findViewById(R.id.juegox_basurero)\r\n        } else {\r\n            imgManzanaGenerada.setImageResource(R.drawable.sagarraberdea)\r\n            mznGnrDestino = globalView.findViewById(R.id.juegox_cesta)\r\n        }\r\n        manzanaList!!.add(DragnDropImage(imgManzanaGenerada,mznGnrDestino))\r\n\r\n        imgManzanaGenerada.setOnTouchListener(listener)\r\n\r\n        //OPTIONAL TO DO\r\n        //val newAnimation: AnimatorSet = AnimatorSet()\r\n        //newAnimation.stop\r\n\r\n    }\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    var listener = View.OnTouchListener { viewElement, motionEvent ->\r\n        var itemInList: DragnDropImage? = findItemByOrigen(viewElement)\r\n        if (itemInList != null) {\r\n            if (!itemInList.acertado) {\r\n                viewElement.bringToFront()\r\n                val action = motionEvent.action\r\n                when(action) {\r\n                    MotionEvent.ACTION_MOVE -> {\r\n                        viewElement.x = motionEvent.rawX - viewElement.width/2\r\n                        viewElement.y = motionEvent.rawY - viewElement.height/2\r\n                    }\r\n                    MotionEvent.ACTION_UP -> {\r\n\r\n                        viewElement.x = motionEvent.rawX - viewElement.width/2\r\n                        viewElement.y = motionEvent.rawY - viewElement.height/2\r\n                        var objetivoEncontrado: View = itemInList!!.objetivo\r\n                        val location = IntArray(2)\r\n                        objetivoEncontrado.getLocationOnScreen(location);\r\n                        var posX = location[0]\r\n                        var posY = location[1]\r\n                        var sizeX = objetivoEncontrado.width\r\n                        var sizeY = objetivoEncontrado.height\r\n                        if ( (viewElement.x + viewElement.width/2) >= posX && (viewElement.y + viewElement.height/2) >= posY && (viewElement.x + viewElement.width/2) <= posX+sizeX && (viewElement.y + viewElement.height/2) <= posY+sizeY) {\r\n                            viewElement.x = posX.toFloat()\r\n                            viewElement.y = posY.toFloat()\r\n                            itemInList.acertado = true\r\n\r\n                            viewElement.visibility = GONE\r\n                            viewElement.setOnTouchListener(null)\r\n                            /*\r\n                            sendToTopImagesNotFinished()\r\n                            viewElement.setOnTouchListener(null)\r\n                            if (puzzleCompletado()) {\r\n                                //iniciarPreguntas()\r\n                                var myUser: User = DbHandler.getUser()!!\r\n                                myUser.puntuacion = myUser.puntuacion!! + 5\r\n                                DbHandler().requestDbUserUpdate(this)\r\n                                button.visibility = View.VISIBLE\r\n                                Toast.makeText(requireContext(), \"Bikain!\", Toast.LENGTH_SHORT).show()\r\n                            }\r\n\r\n                             */\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        true\r\n    }\r\n\r\n    private fun findItemByOrigen(view: View): DragnDropImage? {\r\n        for (item in manzanaList!!) {\r\n            if (item.origen == view) {\r\n                return item\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    //fun startTimeCounter(view: View, timeInSeconds: Int) {\r\n    fun startTimeCounter() {\r\n        object: CountDownTimer(50000, 1000) {\r\n            override fun onTick(millisUntilFinished: Long) {\r\n                //Each second create an element\r\n                generarManzana()\r\n            }\r\n            override fun onFinish() {\r\n                //Timer Finished + Might this should show win screen\r\n            }\r\n        }.start()\r\n    }\r\n\r\n    companion object {\r\n        /**\r\n         * Use this factory method to create a new instance of\r\n         * this fragment using the provided parameters.\r\n         *\r\n         * @param param1 Parameter 1.\r\n         * @param param2 Parameter 2.\r\n         * @return A new instance of fragment Fragment1_juego.\r\n         */\r\n        // TODO: Rename and change types and number of parameters\r\n        @JvmStatic\r\n        fun newInstance(param1: String, param2: String) =\r\n            Fragment1_7_juego().apply {\r\n                arguments = Bundle().apply {\r\n                    putString(ARG_PARAM1, param1)\r\n                    putString(ARG_PARAM2, param2)\r\n                }\r\n            }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/didaktikapp/fragments/juegos/Fragment1_7_juego.kt b/app/src/main/java/com/example/didaktikapp/fragments/juegos/Fragment1_7_juego.kt
--- a/app/src/main/java/com/example/didaktikapp/fragments/juegos/Fragment1_7_juego.kt	
+++ b/app/src/main/java/com/example/didaktikapp/fragments/juegos/Fragment1_7_juego.kt	
@@ -1,9 +1,11 @@
 package com.example.didaktikapp.fragments.juegos
 
+import `in`.codeshuffle.typewriterview.TypeWriterView
 import android.annotation.SuppressLint
+import android.content.Intent
 import android.graphics.Color
+import android.graphics.Typeface
 import android.graphics.drawable.AnimationDrawable
-import android.media.Image
 import android.media.MediaPlayer
 import android.os.Bundle
 import android.os.CountDownTimer
@@ -19,15 +21,17 @@
 import android.view.animation.TranslateAnimation
 import android.widget.*
 import androidx.constraintlayout.widget.ConstraintLayout
+import androidx.core.content.ContextCompat
 import androidx.core.view.isVisible
 import androidx.navigation.Navigation
-import com.example.didaktikapp.Model.DragnDropImage
+import com.example.didaktikapp.Model.*
 import com.example.didaktikapp.R
-import com.example.didaktikapp.activities.DbHandler
-import com.example.reto01.Model.User
+import com.example.didaktikapp.activities.Activity7_Juego2_Results
+import kotlinx.android.synthetic.main.fragment1_2_juego.*
 import kotlinx.android.synthetic.main.fragment1_7_juego.*
 import kotlinx.coroutines.launch
 import kotlinx.coroutines.runBlocking
+import java.util.ArrayList
 
 // TODO: Rename parameter arguments, choose names that match
 // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
@@ -39,11 +43,22 @@
  * Use the [Fragment1_juego.newInstance] factory method to
  * create an instance of this fragment.
  */
-class Fragment1_7_juego : Fragment() {
+class Fragment1_7_juego : Fragment(), View.OnClickListener {
     // TODO: Rename and change types of parameters
     private var param1: String? = null
     private var param2: String? = null
-
+    private lateinit var preguntasjuego7:Preguntasjuego7
+    private var mQuestionList: ArrayList<Preguntasjuego7>?= null
+    private var mCurrentPosition:Int=1
+    private var mSelectedOptionPosition: Int= 0
+    private lateinit var progressBar : ProgressBar
+    private lateinit var txtProgressBar : TextView
+    private lateinit var question1 : TextView
+    private lateinit var question_answer1 : TextView
+    private lateinit var question_answer2 : TextView
+    private lateinit var question_answer3 : TextView
+    private lateinit var btnSiguiente : Button
+    private  var mCorrectAnswers: Int = 0
     private lateinit var globalView: View
     private var audio: MediaPlayer? = null
     private var viewActiva = false
@@ -65,25 +80,31 @@
         // Inflate the layout for this fragment
         val view = inflater.inflate(R.layout.fragment1_7_juego, container, false)
         globalView = view
-        val button: Button = view.findViewById(R.id.btnf1_7_siguiente)
+
         val ajustes: ImageButton = view.findViewById(R.id.btnf1_7_ajustes)
-        button.visibility=GONE
+        val button:Button = view.findViewById(R.id.btnf1_2siguiente)
+
+        progressBar = view.findViewById(R.id.custom_progressBar)
+        txtProgressBar =view.findViewById(R.id.txtv1_2_progreessbar)
+        question1= view.findViewById(R.id.txtv1_2_pregunta1)
+        question_answer1= view.findViewById(R.id.txtv1_2_respuesta1)
+        question_answer2= view.findViewById(R.id.txtv1_2_respuesta2)
+        question_answer3= view.findViewById(R.id.txtv1_2_respuesta3)
+        btnSiguiente= view.findViewById(R.id.btnf1_2siguiente)
 
-/*
-        val constraintLayoutFound = globalView.findViewById<ConstraintLayout>(R.id.mainlayout)
-        var newView: ImageView
-        newView = ImageView(requireContext())
-        newView.layoutParams.height = 200
-        newView.layoutParams.width = 200
-        newView.x = 300F
-        newView.y = 500F
-        newView.setBackgroundColor(Color.BLUE)
 
 
-        //newView.setImageResource(R.drawable.sagarragorria)
+        //Audio tutorial
+         audioTutorial(view)
 
-        constraintLayoutFound.addView(newView)
-        */
+        //Creamos la pregunta y las respuestas segun la posicion
+        setQuestion()
+        //Cuando hacer click en la respuesta de la pregunta, lanzamos mensaje de error o de acierto
+        question_answer1!!.setOnClickListener(this)
+        question_answer2!!.setOnClickListener(this)
+        question_answer3!!.setOnClickListener(this)
+        btnSiguiente!!.setOnClickListener(this)
+
 
         button.setOnClickListener(){
             Navigation.findNavController(view).navigate(R.id.action_fragment1_7_juego_to_fragment2_7_minijuego)
@@ -92,15 +113,6 @@
             Navigation.findNavController(view).navigate(R.id.action_fragment1_7_juego_to_fragment4_menu)
         }
 
-        /*
-        // COMENTADO PARA EL DESARROLLO DEL JUEGO
-        //Typewriter juego 4 tutorial
-        Handler(Looper.getMainLooper()).postDelayed({
-            typewriter(view)
-        }, 2000)
-        //Typewriter juego 4 tutorial fin
-        audioTutorial(view)
-         */
         finalizarQuickIntro(view)
         return view
     }
@@ -115,10 +127,178 @@
         img.visibility = GONE
         iniciarJuegoRecogerManzanas()
     }
+    private fun setQuestion(){
+
+        preguntasjuego7= Preguntasjuego7()
+
+        //Recojemos las preguntas del Constants juego2
+        mQuestionList= Constantsjuego7.getQuestions()
+
+        //Posición de la pregunta en el progress bar (0)
+        val question: Preguntasjuego7 = mQuestionList!! [mCurrentPosition-1]
+        defaultOptionsView()
+
+        if (mCurrentPosition==mQuestionList!!.size){
+
+            btnSiguiente.text="Amaitu"
+        }else{
+            btnSiguiente.text="Bidali"
+        }
+        progressBar!!.progress= mCurrentPosition
+        txtProgressBar!!.text= "$mCurrentPosition" + "/" + progressBar.max
+        question1!!.text= question!!.question
+        question_answer1!!.text= question!!.optionOne
+        question_answer2!!.text= question!!.optionTwo
+        question_answer3!!.text= question!!.optionThree
+
+
+    }
+
+    //COLOR Y FONDO POR DEFECTO DE LAS RESPUESTAS
+    private fun defaultOptionsView(){
+
+        val options= ArrayList<TextView>()
+        options.add(0, question_answer1)
+        options.add(1, question_answer2)
+        options.add(2, question_answer3)
+
+
+        for (option in options){
+
+            option.setTextColor(Color.parseColor("#7A8089"))
+            option.typeface= Typeface.DEFAULT
+            option.background= ContextCompat.getDrawable(
+                requireContext(), R.drawable.juego2_default_option_border_bg
+            )
+        }
+    }
+
+    override fun onClick(v:View?) {
+
+        //Según el botón que hayamos clickado, pasamos la id a la función selectedOptionView
+        when(v?.id){
+
+            R.id.txtv1_7_respuesta1->{
+                selectedOptionView(txtv1_2_respuesta1, 1)
+            }
+            R.id.txtv1_7_respuesta2->{
+                selectedOptionView(txtv1_2_respuesta2, 2)
+            }
+            R.id.txtv1_7_respuesta3->{
+                selectedOptionView(txtv1_2_respuesta3, 3)
+            }
+
+            R.id.btnf1_2siguiente->{
+                //El usuario no ha elegido la opcion, cuando elija nos movemos de posicion
+                if (mSelectedOptionPosition==0){
+                    mCurrentPosition++
+                    //Habilitamos las respuestas al clickar la respuesta
+                    question_answer1.isEnabled=true
+                    question_answer2.isEnabled=true
+                    question_answer3.isEnabled=true
+
+                    //Si mi posicion es menor o igual que el tamaño de la lista, reseteamos la pregunta
+                    when{
+                        mCurrentPosition<=mQuestionList!!.size->{
+
+                            setQuestion()
+
+                        }else->{
+
+                        /*Nos redirecciona a la activity de resultados,
+                        recojemos las respuestas correctas y el total de preguntas
+                       */
+                        activity?.let{
+                            val intent = Intent (it, Activity7_Juego2_Results::class.java)
+                            intent.putExtra(Constantsjuego7.CORRECT_ANSWERS, mCorrectAnswers)
+                            intent.putExtra(Constantsjuego7.TOTAL_QUESTIONS, mQuestionList!!.size)
+                            it.startActivity(intent)
+                        }
+                    }
+
+                    }
+                }else{
+                    /*Si ya ha clickado en la respuesta, cojemos la pregunta de la posicion en la que esta.
+                      Si la respuesta correcta no es igual a la respuesta que ha elegido el usuario, sacamos mensaje de error.
+                        sino, añadimos la respuesta correcta a la variable CorrectAnswers para despues mostrar los aciertos
+                        al acabar el quiz. La respuesta correcta va fuera del if, ya que siempre saldrá independientemente de si
+                        el usuario ha acertado o ha fallado*/
+                    val question= mQuestionList?.get(mCurrentPosition-1)
+                    if (question!!.correctAnswer!=mSelectedOptionPosition){
+
+                        answerView(mSelectedOptionPosition, R.drawable.juego2_error_option_border_bg)
+
+                    }else{
+
+                        mCorrectAnswers++
+                    }
+                    question.correctAnswer?.let { answerView(it, R.drawable.juego2_correct_option_border_bg) }
+
+                    if (mCurrentPosition==mQuestionList!!.size){
 
+                        btnSiguiente.text="Amaitu jokoa"
+                    }else{
+
+                        btnSiguiente.text="Joan hurrengo galderara"
+                    }
+
+                    mSelectedOptionPosition=0
+                    //Deshabilitamos las respuestas al clickar la respuesta
+                    question_answer1.isEnabled=false
+                    question_answer2.isEnabled=false
+                    question_answer3.isEnabled=false
+
+                }
+
+            }
+
+        }
+
+    }
+    //Cambiamos de color de fondo a la opcion en concreto
+
+    fun answerView(answer: Int, drawableView:Int){
+        //Cambiamos el fondo a cada respuesta
+        when(answer){
+
+            1->{
+
+                question_answer1.background=ContextCompat.getDrawable(
+                    requireContext(), drawableView
+                )
+            }
+
+            2->{
+
+                question_answer2.background=ContextCompat.getDrawable(
+                    requireContext(), drawableView
+                )
+            }
+            3->{
+
+                question_answer3.background=ContextCompat.getDrawable(
+                    requireContext(), drawableView
+                )
+            }
+
+
+        }
+    }
+    //COLOR Y FONDO RESPUESTA SELECCIONADA
+    private  fun selectedOptionView(tv:TextView, selectedOptiomNum:Int){
+
+        defaultOptionsView()
+        mSelectedOptionPosition= selectedOptiomNum
+
+        tv.setTextColor(Color.parseColor("#363A43"))
+        tv.setTypeface(tv.typeface, Typeface.BOLD)
+        tv.background= ContextCompat.getDrawable(
+            requireContext(), R.drawable.juego2_selected_option_border_bg)
+
+    }
     fun audioTutorial(view: View){
 
-        //Audio juego 4
+        //Audio juego 7
         var audio: MediaPlayer
         runBlocking() {
             launch {
@@ -152,6 +332,7 @@
         Handler(Looper.getMainLooper()).postDelayed({
             upelio.isVisible = false
             talkAnimationfun(view)
+            typewriter(view)
         }, 2000)
 
     }
@@ -172,20 +353,20 @@
             val txtAnimacion = view.findViewById(R.id.txtv1_7_fondogris) as TextView
             val aniFade = AnimationUtils.loadAnimation(context, R.anim.fade_out)
             txtAnimacion.startAnimation(aniFade)
-            txtv1_7_tutorialjuego4.startAnimation(aniFade)
-            txtv1_7_tutorialjuego4.isVisible = false
+            txtv1_7_tutorialjuego7.startAnimation(aniFade)
+            txtv1_7_tutorialjuego7.isVisible = false
             txtAnimacion.isVisible = false
         }, 1000)
     }
 
     private fun typewriter(view: View) {
-        /*
-        val typeWriterView = view.findViewById(R.id.txtv1_7_tutorialjuego4) as TypeWriterView
+
+        val typeWriterView = view.findViewById(R.id.txtv1_7_tutorialjuego7) as TypeWriterView
         typeWriterView.setWithMusic(false)
-        typeWriterView.animateText(resources.getString(R.string.juego4tutorial))
+        typeWriterView.animateText(resources.getString(R.string.juego7tutorial))
         typeWriterView.setDelay(65)
 
-         */
+
     }
     private fun talkAnimationfun(view: View) {
         val upelio = view.findViewById(R.id.imgv1_7_upelio2) as ImageView
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">Sagarra jo</string>\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"lorem\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</string>\r\n    <string name=\"btnsaltar\">Saltatu</string>\r\n\r\n    <!--PRINCIPAL-->\r\n    <string name=\"tituloprincipal\">SAGARRA JO</string>\r\n    <string name=\"nombregrupo\">Onandi taldea</string>\r\n    <string name=\"btnhasi\">Hasi</string>\r\n    <string name=\"btncargar\">Partida Kargatu</string>\r\n    <string name=\"btnnueva\">Partida berria</string>\r\n\r\n    <!--LOGIN-->\r\n    <string name=\"inputnombre\">Izena</string>\r\n    <string name=\"introducirnombre\">Jarri zure izena azpian</string>\r\n\r\n    <!--CARGAR-->\r\n    <string name=\"titulocargar\">Kargatu zure partida!</string>\r\n    <string name=\"text_bienvenida\">Kaixo, lagunok! Ni Upelio sagarra naiz, Astigarragako sagarrik ederrena. Gaurkoan nirekin batera Astigarraga ezagutuko duzue. Gainera, nik sagardo bilakatu nahi dut eta ezin dut bakarrik egin. Beraz, zuen laguntza eta indar guztiak behar ditut! Horretarako Astigarragan zehar ibilbide bat egingo dugu, txoko ezberdinak ezagutuz eta nire ametsa egi bilakatzeko horietako bakoitzean erronka ezberdin bat pasatu beharko duzue. Horretarako oso oso adi egon beharko zarete! Prest zaudete? Goazen!</string>\r\n\r\n    <!--FRAGMENT MENU -->\r\n    <string name=\"botonhome\">HASIERA</string>\r\n    <string name=\"botonmapa\">MAPA</string>\r\n    <string name=\"botonagain\">ERREPIKATU</string>\r\n    <string name=\"botonnext\">HURRENGOA</string>\r\n    <string name=\"botonhelp\">LAGUNTZA</string>\r\n    <string name=\"botonajustes\">EZARPENAK</string>\r\n\r\n    <!--FRAGMENT AJUSTES -->\r\n    <string name=\"ajustes\">EZARPENAK</string>\r\n    <string name=\"botonidioma\">HIZKUNTZA</string>\r\n    <string name=\"botonoscuro\">ALDATU GAIA</string>\r\n    <string name=\"botonacercade\">NORTZUK GARA</string>\r\n\r\n    <!--FRAGMENT JUEGO1 -->\r\n    <string name=\"text_1juego\">\"Lehenengo geldiunera iritsi gara! Sagardoetxera! Sagardoetxea Euskal Sagardogintzaren eta horren kulturaren museoa da. Naturarekin kontaktuan izanez, hainbat gauza ikas daitezke bertan.  Horretarako, hiru gune ditu. Lehenengoa museo gunea da. Bertan sagarraren historia lantzen da, jokoen, argazkien… bitartez eta sagardo goxo-goxoa nola egiten den ikasten da. Horrez gain, panel informatibo ugari daude, oso interesgarriak gainera! Bigarren gunea sagastia da. Sagastira sagarrondoak ikustera joaten da eta nola ez, sagar ezberdinak ezagutzera. Gainera, bertan hainbat lan egiteko aukera dago!  Azkeneko gunea dastatzea denez, sagardo bilakatu aurretik sagar zukua dastatzeko aukera egoten da. A ze goxoa!! Mmmm!! \"</string>\r\n    <string name=\"titulo1_juego\">\"1. JARDUERA: SAGARDOETXEA \"</string>\r\n\r\n    <string name=\"azalpena1_juego1\">Gune honetan hainbat sagar mota ezagutuko eta hartuko dituzu.</string>\r\n    <string name=\"juego1_azalpena2\">Gune honetan sagar zukua dastatuko duzu.</string>\r\n    <string name=\"juego1_azalpena3\">Gune honetan sagarraren historia eta sagadoaren prozesuak landuko dituzu.</string>\r\n\r\n    <string name=\"jositajositext\">Misioari ekiteko, lehenik eta behin “Josi `ta josi” jolasera jolastu beharko duzue. Horretarako pantailaren alde batean sagardoetxeko 3 guneak eta horien argazkiak agertzen zaizkizue eta beste aldean, bertako zereginak. Beraz, guneak eginkizunekin lotu behar dituzue.</string>\r\n\r\n\r\n    <!--FRAGMENT JUEGO2 -->\r\n    <string name=\"text_2juego\">\"Begira non gauden! Murgia Jauregian! Gune berezia inondik inora, magiaz eta xarmaz betea dagoelako. Donostiatik kilometro gutxira kokatua dago, Astigarragan. Murgia Jauregia XI. mendean sortu zen eta hasiera batean, Murgia familiaren dorretxea izan zen, jauregi bilakatu aurretik.  Jauregia, muino baten gainean dago, Urumea ibarraren gainean eta barruan historiaz betetako egongelak eta guneak ditu. Duela mende asko, zenbait sute jasan zituen jauregiak eta ondorioz, hainbat aldiz berregin behar izan zuten. Gainera, ikusten duzuen bezala, egungo sarrera nagusiaren gainean Murgia sendiaren armarria dago. Azkenik, gero ikusiko dugun moduan, Astigarragan Sagardo berriaren eguna edo Txotx irekiera ospatzen da eta normalean, egun horretako hasiera Murgiako jauregian egiten da. \"</string>\r\n    <string name=\"titulo2_juego\">2. JARDUERA: MURGIA JAUREGIA</string>\r\n\r\n    <string name=\"que1_juego2\">Ematen digu fruituak, gerizpea eta itzala, ekaitza iristen denean… azpian babes gaitzala!</string>\r\n    <string name=\"que2_juego2\">Zaharra naiz ni, zaharra da herria, Murgia jauregiaren ate gainean nagoen harria.</string>\r\n    <string name=\"que3_juego2\">Gogorra eta indartsua naiz, ez nauzue apurtuko garaiz, inguruan ikusten nauzue maiz. Nor naiz?</string>\r\n    <string name=\"que4_juego2\">Tipi-tapa tipi-tapa banoa gorantza, tipi-tapa tipi-tapa banoa beherantza, tipi-tapa tipi-tapa guztiak batera igo eta jaistean datza.</string>\r\n\r\n    <string name=\"que1_ans1_juego2\">Zuhaitza</string>\r\n    <string name=\"que1_ans2_juego2\">Etxea</string>\r\n    <string name=\"que1_ans3_juego2\">Lorea</string>\r\n    <string name=\"que1_ans4_juego2\">Atea</string>\r\n    <string name=\"que2_ans1_juego2\">Teilatua</string>\r\n    <string name=\"que2_ans2_juego2\">Armarria</string>\r\n    <string name=\"que2_ans3_juego2\">Leihoa</string>\r\n    <string name=\"que2_ans4_juego2\">Sarrera</string>\r\n    <string name=\"que3_ans1_juego2\">Egurra</string>\r\n    <string name=\"que3_ans2_juego2\">Zuhaitzak</string>\r\n    <string name=\"que3_ans3_juego2\">Harria</string>\r\n    <string name=\"que3_ans4_juego2\">Leihoa</string>\r\n    <string name=\"que4_ans1_juego2\">Eskailerak</string>\r\n    <string name=\"que4_ans2_juego2\">Leihoak</string>\r\n    <string name=\"que4_ans3_juego2\">Zuhaitzak</string>\r\n    <string name=\"que4_ans4_juego2\">Hostoak</string>\r\n\r\n    <string name=\"emaitza\">Emaitza</string>\r\n    <string name=\"amaitu\">Amaitu</string>\r\n    <string name=\"ezetzigarrijolasa\">Bigarren jolasaren izena “Ezetz igarri?” da. Beraz, lagunduko didazue asmakizunak asmatzen? Goazen, ba! Eta gogoratu, asmakizuna asmatzen baduzu, horren argazkia atera beharko duzula.</string>\r\n    <string name=\"saiatuberriro\">Saiatu berriro</string>\r\n    <string name=\"text_bienvenidamapa\">Hau izango da egingo behar duzuen ibilbidea ni sagardo bilakatzeko. Zorte on!</string>\r\n    <string name=\"sagardantzajolasa\">\"Bosgarren geldiunera ailegatu gara!!! Astigar elkartera!!! Sagar Dantza ezagutzeko gogoekin? Zuek gustuko ahal duzue dantza egitea? Ba Astigartarrei asko gustatzen zaie ere, batez ere, Astigar Dantza taldeko kideei. Astigar Dantza taldeko neska- mutil gazteek, urtero, festa ezberdinak ospatzeko (Sagar uzta, txotx irekiera…) Sagar Dantza izeneko dantza bat egiten dute sagarrekin eta Astigarragako txoko ezberdinetan egiten da: sagardotegietan, plazan, sagardoetxean… Sagar dantza ez da soilik Astigarragan dantzatzen, beste zenbat herrietan ere dantzatzen da, baina dantza ez da guztiz berdina izaten leku guztietan. Jantziak ere herri batetik bestera aldatu egiten dira, hori dela eta, geldiune honetan egingo duzuen jardueran honekin erlazionatuta dago. Astigarragan Sagar Dantza dantzatzeko erabiltzen diren jantziak, adibidez, nahiko deigarriak dira, batez ere, “txorroko” deituriko kolorezko txapelari esker, oso bitxiak baitira! \"</string>\r\n    <string name=\"ikusibideoa\">Ikusi bideoa</string>\r\n    <string name=\"jolastu\">Hasi jokoa</string>\r\n\r\n    <!--FRAGMENT JUEGO3.1 -->\r\n    <string name=\"titulo31_juego\">3. JARDUERA: SANTA ANA</string>\r\n    <string name=\"text_31juego\">\"Badakizue non gauden, ezta? Herriko Foru plazan! Badakizue zer ospatzen den hemen uztailaren 26an? Norbaitek asmatu du? Santa Ana, ezta? Dakizuenez, Santa Anan gure herriko sagardogileek eta Sagardun Patzuergoko kideek beren sagardoa jartzen dute festako edalontzi berezi batean, jendeak sagardo ezberdinak dastatzeko asmoz. Horrez gain, txorizo eta haragi gisatuko pintxoak ere salgai egoten dira. Zelako goxo dagoen guztia! Norbaitek daki noiztik ospatzen den jai egun hau? 1976 urtetik, Euskal Herrian ospatzen direnen artean zaharrena! Gainera, dakizuenez, idi-demak izaten dira sagardo dastaketarekin batera. Horrez gain, zanpantzarrak ere herritik barrena ibiltzen dira zintzarriak astinduz. Herri osoa alaitzen dute! \"</string>\r\n\r\n\r\n    <!--FRAGMENT JUEGO3.2 -->\r\n    <string name=\"text_32juego\">\"Laugarren geldiunera iritsi gara! Foru Plazara!!! Sagar Uzta ospatzen den tokira!  Irailean ospatzen den jaia da Sagar Uzta! Jende guztiarentzako prestatutako festa da eta gaur egunean zehar burutzen diren hainbat ekintza eta jarduera ikasiko ditugu.  Badakizue zein da festa honetarako motiboa? Sagarrak biltzeko garaia heltzen dela! Hori dela eta, egun hori sagardoa egiteko prozesua erakusteko eta herritartzeko asmoarekin ospatzen da.  Baina, zeintzuk dira egun honetan burutzen diren ekintzak edo jarduerak? Adi egon! Gero, informazio honekin bi ariketa egin beharko dituzuelako sagardoa egiteko hurrengo pausua zein den ezagutu ahal izateko. Egunean zehar askotariko ekintzak daude: goizean Musika Eskolako txistulariek esnatzen dute herria, sagar dantza dantzatzen da eta txalaparta doinua entzuten da. Gainera, lehengo zanpatze erakusketa, bertako sagar erakusketa eta artisau produktuen salmenta, eta sagardo dastatze eta salmenta egiten da, baita sagarrak probatzeko aukera dago ere.  \"</string>\r\n    <string name=\"titulo32_juego\">4. JARDUERA: SAGAR UZTA</string>\r\n\r\n\r\n    <!--FRAGMENT JUEGO4 -->\r\n    <string name=\"text_4juego\">\"Bosgarren geldiunera ailegatu gara!!! Astigar elkartera!!! Sagar Dantza ezagutzeko gogoekin? Zuek gustuko ahal duzue dantza egitea? Ba Astigartarrei asko gustatzen zaie ere, batez ere, Astigar Dantza taldeko kideei. Astigar Dantza taldeko neska- mutil gazteek, urtero, festa ezberdinak ospatzeko (Sagar uzta, txotx irekiera…) Sagar Dantza izeneko dantza bat egiten dute sagarrekin eta Astigarragako txoko ezberdinetan egiten da: sagardotegietan, plazan, sagardoetxean… Sagar dantza ez da soilik Astigarragan dantzatzen, beste zenbat herrietan ere dantzatzen da, baina dantza ez da guztiz berdina izaten leku guztietan. Jantziak ere herri batetik bestera aldatu egiten dira, hori dela eta, geldiune honetan egingo duzuen jardueran honekin erlazionatuta dago. Astigarragan Sagar Dantza dantzatzeko erabiltzen diren jantziak, adibidez, nahiko deigarriak dira, batez ere, “txorroko” deituriko kolorezko txapelari esker, oso bitxiak baitira!  \"</string>\r\n    <string name=\"titulo4_juego\">\"5. JARDUERA: SAGAR DANTZA \"</string>\r\n\r\n\r\n    <!--FRAGMENT JUEGO5 -->\r\n    <string name=\"text_5juego\">\"Badakizue zer? Astigarragan famatua den pertsona bat aurkeztuko dizuet! Prest zaudete? Bueno ba… hasiko gara! Agin Laburu du izena pertsona famatuak eta esan bezala, Astigarragan bizi da.  Oso pertsona langilea da eta Kazetaritzan lizentziatua da. Gainera, bere aitak bultzatuta egin zen bertsozale eta ordutik, Hernaniko bertso eskolan darama urte asko eta asko.  Ez duzue sinetsiko, baina hainbat txapelketa irabazi ditu. Eta, gainera, txapelketa nagusietan aritu da! Birritan izan da Gipuzkoako Bertsolari Txapelketa Nagusiko finalean eta azken Euskal Herriko txapelketan finalerdietara iritsi zen. Zelako makina dugun Astigarragan! Baina, gaur egun, zertan aritzen da batez ere Laburu? Sagardotegi batean lan egiten du, Ipintza sagardotegiko martxa darama. Baina, pentsatuko duzue zer ote den Ipintza sagardotegia ezta? lasai egon jarraian azalduko dizuedala! Ipintza sagardotegia Upategi txikia da, hau da, produkzio txikiko sagardotegia. Ipintzara etortzen denak gastronomiaz eta Euskal Sagardoaz gozatzeko aukera du! Baina, gauza bat neska mutilok… zerez egongo da eginda aipatutako sagardo hori? ez esan inori… baina... Santiagomendiko beren sagastiko sagarrez egina da.  Bukatzeko, kontatu behar dizuet Etxeko Euskal Sagardoaz gain, beste sagardotegietako Euskal Sagardoak ere dastatu daitezkeela Ipintza sagardotegian. Animatzen zarete Agin Laburu bere sagardotegian bisitatzen eta berarekin ikasten? Anima zaitezte!!! \"</string>\r\n    <string name=\"titulo5_juego\">6. JARDUERA: AGIN LABURU</string>\r\n\r\n    <string name=\"titulo\">Oraingoan, “Kantu- kanta” ariketa egin beharko duzue. Pantailan entzun berri duzuen bertsoa agertuko zaizue, bete beharreko hutsune batzuekin. Zuek, hutsune horiek  bete beharko dituzue hitz batekin, orain entzun berri duzuen bertsoaz oroituz. Oraintxe ikusiko dut zer nolako memoria duzuen… animo!\r\n    </string>\r\n\r\n    <string name=\"comprobatu\">komprobatu</string>\r\n\r\n\r\n    <!--FRAGMENT JUEGO6 -->\r\n    <string name=\"text_6juego\">\"Azken geldiunera iritsi gara! Zelako bidaia polita egiten ari garen! Badakizue zer den txotx irekiera? Urtarrilaren hasieran Astigarragan ospatzen den ekitaldi bat da Txotx irekiera, Sagardo Berriaren eguna ere deiturikoa. Txotx denboraldiari hasiera emateko, eta urteko sagardo berria dastatzeko asmoz, urtero, sagardotegi desberdin batek ekitaldi bat antolatzen du sagardotegian bertan.  Sagardo berria dastatzen duen lehenengo pertsona, gonbidatu famatu bat izan ohi da: mendizalea, abeslaria, bertsolaria, futbolaria…  Ziur urteren bateko gonbidaturen bat ezaguna egingo zaizuela: Izaro Andres abeslaria, Xabi Alonso futbolaria, Indurain txirrindularia... Esan dezakegu, gonbidatuak garrantzia handia duela jai honetan, bera baita eguneko protagonistetako bat. Astigarragako sagardo berria dastatu baino lehen, gonbidatuari, besteak beste, Sagar Dantza dantzatu, txistua jo eta txalaparta jotzen zaio. Gonbidatuak urteko sagardoa probatu ondoren, ikusleek ere sagardo berria probatu eta bazkari jendetsu bat egiten da sagardotegian bertan, edonor joan daiteke bazkarira. \"</string>\r\n    <string name=\"titulo6_juego\">7. GUNEA: TXOTX IREKIERA</string>\r\n    <string name=\"erantzuna1\">1 galderaren erantzuna</string>\r\n    <string name=\"erantzuna2\">2 galderaren erantzuna</string>\r\n    <string name=\"erantzuna3\">3 galderaren erantzuna</string>\r\n    <string name=\"erantzuna4\">4 galderaren erantzuna</string>\r\n    <string name=\"erantzuna5\">5 galderaren erantzuna</string>\r\n    <string name=\"erantzuna6\">6 galderaren erantzuna</string>\r\n\r\n    <!--ACERCA DE -->\r\n    <string name=\"equipodesarrollo\">• EQUIPO DE DESARROLLO •</string>\r\n    <string name=\"ideaoriginal\">• IDEA ORIGINAL •</string>\r\n\r\n\r\n    <!--BOTONES-->\r\n    <string name=\"jugar\">Jolastu</string>\r\n    <string name=\"siguiente\">Hurrengoa</string>\r\n    <string name=\"repetir\">Errepikatu</string>\r\n\r\n    <string name=\"menu\">MENU</string>\r\n\r\n\r\n    <!--AYUDA-->\r\n    <string name=\"ayudajuego1\">Jarduera honek Astigarragako ondare nagusia pixka bat ezagutzen lagunduko die,\r\nhau da, sagardoa. Bertan ikasleek sagardoetxearen gune guztiak ezagutuko dituzte,\r\nbaita horietako bakoitzean zer egiten den eta horrek ibilbidean zehar egin beharko\r\nduten guztiaren ikuspegi orokor bat izaten lagunduko die. Bertara ailegatzeko, beste\r\njarduera guztietan bezala, mapa erabiliko dute eta informazioa jaso ondoren, ariketa bat\r\nburutuko dute sagardoetxeko guneen argazkiak bertan egiten denarekin lotuz (hau da,\r\nargazkiak eta hitzak lotu behar dituzte).</string>\r\n\r\n    <string name=\"ayudajuego2\">Jarduera honetan Murgia jauregiaren inguruko informazioa jasoko dute. Ondoren,\r\njolas bat burutzeko eskatu diegu, kasu honetan, asmakizunak asmatu beharko dituzte,\r\ngure ustez, ikasleentzako oso erakargarriak direnak. Azken finean asmakizunek\r\nikasleei era dibertigarri batean pentsatzeko aukera ematen die. Gainera, asmakizun\r\nguztiak Murgia jauregiaren inguruko elementuak direnez, hura hobeto ezagutzen\r\nlagunduko die.</string>\r\n    <string name=\"ayudajuego3\">Jarduera honen bidez, Astigarragako Santa Ana egunean egiten denaren berri\r\nizango dute, hura hobeto ezagutzeko asmoz.\r\nHorretarako, app-an ezarritako informazioa irakurri eta entzungo dute, ondoren\r\njoko batzuk burutzeko. Kasu honetan, Santa Ana festan egoten diren zanpantzarren puzzlea egin beharko dute. Behin puzzlea eginda, zanpantzarrekin zerikusia duten bi\r\ngaldera erantzun beharko dituzte.</string>\r\n    <string name=\"ayudajuego4\">Jarduera honek Astigarragako Sagar Uzta eguna ezagutzen lagunduko die.\r\nHorretarako, ikasleak Foru Plazara joango dira. Bertan, Sagar Uztaren inguruko\r\ninformazioa jasoko dute Upelio sagarraren partetik eta gero, letra-zopa (egunean zehar\r\nfesta honetan burutzen diren jardueren izen batzuk eta ospatzen ez diren beste jardueren\r\nizenak topatu beharko dituzte) osatu beharko dute. Hori egin ostean, egia-gezurra\r\n(letra-zopan aurkitutako ekintzak egun horretan burutzen diren edo ez adieraztea)\r\nariketa burutu beharko dute.</string>\r\n    <string name=\"ayudajuego5\">Jarduera honek Astigarragako Sagar Dantza ezagutzeko aukera emango die.\r\nHorretarako, ikasleak Astigar elkartera joango dira. Bertan ikasleek Upelio sagarraren\r\npartetik dantzaren informazioa jasoko dute eta bideo bat ikusiko dute. Hori egin\r\nondoren, ikasleek Sagar dantzan erabiltzen diren ohiko jantziak ezagutzeko, hurrengo\r\nariketa proposatuko diegu: app-ean agertuko den txotxongilo bat jantziko dute,\r\nhorretarako dantzan eramaten duten arroparen argazkiak eskura jarriko dizkiegu eta\r\nargazki bakoitza txotxongiloaren atal bakoitzarekin erlazionatu beharko dute.</string>\r\n    <string name=\"ayudajuego6\">Astigarragako ondare immaterialaren beste zati garrantzitsua ezagutzen lagunduko\r\ndie. Gune honetan, ikasleek Astigarragako bertsolari famatuaren berri izango dute, hain\r\nzuzen ere, Agin Labururen berri, hura hobeto ezagutzeko asmoz.\r\nIpintza Sagardotegian elkartuko dira harekin eta bertan, Aginek “Sagardoari”\r\nizeneko bertsoaren zati bat abestuko du. Ikasleek bertsoa entzun eta gozatu ondoren,\r\napp-an ezarritako informazioa irakurri eta entzuteaz gain, Aginek abestutako bertsoa\r\nagertuko zaie hutsune batzuekin. Ikasleek orduan, hutsune horiek bete beharko dituzte hitzekin, entzun berri duten bertsoaz oroituz. Ondoren, ikasle guztiek elkarrekin\r\nbertsoa ozen abestuko dute.</string>\r\n    <string name=\"ayudajuego7\">Jarduera honek Astigarragako Txox irekieraren eguna ezagutzen lagunduko die.\r\nEgun horretan, Txotx irekieraren nondik norakoa ezagutzeko, Rezola Sagardotegira\r\njoango dira. Bertan ikasleek Upelio sagarraren partetik informazioa jaso eta gero,\r\ngaldera sorta bati erantzuna eman beharko diote ikasleek. Galdera horiei erantzuna\r\nemateko, Upelio sagarrak emandako azalpenean adi egoteaz gain, sagardotegiaren\r\nalbotik pasatzen den jendearen, hau da, astigartarren laguntza ere izango dute; beraiei\r\ngalderak egiteko aukera izango baitute.</string>\r\n    <string name=\"sagardantzajolasatutorial\">“Txotxongiloa janzten” jolasera jolastu beharko duzue. Horretarako pantailaren alde batean txotxongilo bat agertuko da eta bestean, arropa prenda desberdinak. Jolasa gainditzeko, prenda bakoitza txotxongiloaren parte bakoitzarekin lotu beharko duzue, hau da, prenda bakoitzak duen zenbakia txotxongiloaren zein ataletan doan adierazi beharko duzue prendaren zenbakia txotxongiloan adieraziz. Animo!</string>\r\n    <string name=\"juego3_pregunta1\">Argazki horretan agertzen dena Santa Ana festan egoten da?</string>\r\n    <string name=\"juego3_pregunta2\">Nortzuk dira?</string>\r\n    <string name=\"botonclaro\">MODU ARGIA</string>\r\n    <string name=\"español\">Gaztelania</string>\r\n    <string name=\"euskera\">Euskara</string>\r\n    <string name=\"Idiomas\">Hizkuntzak</string>\r\n    <string name=\"tema\">Tema</string>\r\n\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	
@@ -185,6 +185,11 @@
     <string name="euskera">Euskara</string>
     <string name="Idiomas">Hizkuntzak</string>
     <string name="tema">Tema</string>
+    <string name="juego7tutorial">Orain “Belarriak adi eta erantzunak egoki” ariketa egin beharko duzue. Pantailan galdera ezberdinak agertuko zaizkizue, hainbat erantzun posiblerekin. Zuek, erantzun egokia aukeratu beharko duzue abentura honetan aurrera jarraitzeko! Laguntza behar baduzue, ahaztu lotsak eta eskatu laguntza inguruan ikusten dituzuen astigartarrei. Zorte on!</string>
+    <string name="que1_juego7">Aurten zenbagarren txotx irekiera izango dugu aurten?</string>
+    <string name="que1_ans1_juego7">28. txotx irekiera</string>
+    <string name="que1_ans2_juego7">25. txotx irekiera</string>
+    <string name="que1_ans3_juego7">23. txotx irekiera</string>
 
 
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/didaktikapp/fragments/Fragment5_ajustes.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.didaktikapp.fragments\r\n\r\nimport android.app.Activity\r\nimport android.app.AlertDialog\r\nimport android.app.Dialog\r\nimport android.content.Context\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.Window\r\nimport android.widget.*\r\nimport com.example.didaktikapp.R\r\nimport com.example.didaktikapp.activities.DbHandler\r\nimport android.content.res.Configuration\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.appcompat.app.AppCompatDelegate\r\nimport androidx.constraintlayout.widget.ConstraintLayout\r\nimport androidx.core.app.ActivityCompat.recreate\r\nimport androidx.core.content.ContextCompat\r\n\r\nimport com.example.didaktikapp.Model.MyPreferences\r\nimport com.example.didaktikapp.activities.Activity1_Principal\r\nimport java.util.*\r\n\r\n\r\n// TODO: Rename parameter arguments, choose names that match\r\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\nprivate const val ARG_PARAM1 = \"param1\"\r\nprivate const val ARG_PARAM2 = \"param2\"\r\n\r\n/**\r\n * A simple [Fragment] subclass.\r\n * Use the [Fragment5_ajustes.newInstance] factory method to\r\n * create an instance of this fragment.\r\n */\r\nclass Fragment5_ajustes : Fragment() {\r\n    // TODO: Rename and change types of parameters\r\n    private var param1: String? = null\r\n    private var param2: String? = null\r\n    private val pass: String = \"admin\"\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        arguments?.let {\r\n            param1 = it.getString(ARG_PARAM1)\r\n            param2 = it.getString(ARG_PARAM2)\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        val view = inflater.inflate(R.layout.fragment5_ajustes, container, false)\r\n        val buttonAcercaDe: Button = view.findViewById(R.id.btn5f_acercade)\r\n        val buttonAdmin: Button = view.findViewById(R.id.btn5f_admin)\r\n        val buttonTheme: Button = view.findViewById(R.id.btn5f_oscuro)\r\n        val buttonIdiomas: Button = view.findViewById(R.id.btn5f_idioma)\r\n\r\n        //Segun la opcion seleccionada, clickamos oscuro o claro\r\n        checkTheme(requireContext())\r\n\r\n\r\n\r\n        buttonAcercaDe.setOnClickListener{ showAcercaDeInfo()}\r\n        buttonAdmin.setOnClickListener{\r\n            showModoAdminDialog()\r\n        }\r\n\r\n        buttonTheme.setOnClickListener{\r\n            chooseThemeDialog(view)\r\n\r\n        }\r\n\r\n        buttonIdiomas.setOnClickListener{\r\n\r\n            chooseLanguageDialog()\r\n        }\r\n\r\n\r\n        return view\r\n    }\r\n\r\n\r\n          fun chooseThemeDialog(view:View){\r\n\r\n              val builder = AlertDialog.Builder(requireContext())\r\n              builder.setTitle(getString(R.string.tema))\r\n              val styles = arrayOf(\"Claro\", \"Oscuro\")\r\n              val checkedItem = MyPreferences(requireContext()).darkMode\r\n\r\n              builder.setSingleChoiceItems(styles, checkedItem) { dialog, which ->\r\n\r\n                  when (which) {\r\n                      0 -> {\r\n                          AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)\r\n                          MyPreferences(requireContext()).darkMode = 0\r\n                          ( requireContext() as  AppCompatActivity).delegate.applyDayNight()\r\n\r\n                          dialog.dismiss()\r\n                      }\r\n                      1 -> {\r\n                          AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES)\r\n                          MyPreferences(requireContext()).darkMode = 1\r\n                          ( requireContext() as  AppCompatActivity).delegate.applyDayNight()\r\n\r\n\r\n\r\n                          dialog.dismiss()\r\n                      }\r\n\r\n                  }\r\n              }\r\n\r\n              val dialog = builder.create()\r\n              dialog.show()\r\n\r\n          }\r\n\r\n\r\n    fun checkTheme(requireContext:Context) {\r\n\r\n        when (MyPreferences(requireContext).darkMode) {\r\n            0 -> {\r\n            AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)\r\n                ( requireContext  as  AppCompatActivity).delegate.applyDayNight()\r\n\r\n            }\r\n            1 -> {\r\n                AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES)\r\n                ( requireContext as  AppCompatActivity).delegate.applyDayNight()\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //IDIOMAS DIALOG\r\n    fun chooseLanguageDialog() {\r\n\r\n\r\n\r\n        val spanish = getString(R.string.español)\r\n        val euskera = getString(R.string.euskera)\r\n\r\n        val languages = arrayOf(euskera, spanish)\r\n        val builder = AlertDialog.Builder(requireContext())\r\n        builder.setTitle(getString(R.string.Idiomas))\r\n\r\n        val checkedItem = MyPreferences(requireContext()).lang\r\n\r\n        builder.setSingleChoiceItems(languages, checkedItem) { dialog, which ->\r\n            when (which) {\r\n                0 -> {\r\n                    setLocate(\"eu\")\r\n                     recreate(requireContext() as Activity)\r\n                    MyPreferences(requireContext()).lang = 0\r\n                    dialog.dismiss()\r\n                }\r\n                1 -> {\r\n                    setLocate(\"es\")\r\n                    recreate(requireContext() as Activity)\r\n                    MyPreferences(requireContext()).lang = 1\r\n                    dialog.dismiss()\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n        val dialog = builder.create()\r\n        dialog.show()\r\n    }\r\n\r\n    //for change language\r\n    fun setLocate(lang: String) {\r\n        val locale= Locale(lang)\r\n        Locale.setDefault(locale)\r\n        val config = Configuration()\r\n        config.locale =locale\r\n        requireContext().resources?.updateConfiguration(config, requireContext().resources.displayMetrics)\r\n        //   val editor = getSharedPreferences(\"settings\", Context.MODE_PRIVATE).edit()\r\n        //editor.putString(\"my_lang\", lang)\r\n        // editor.apply()\r\n    }\r\n\r\n\r\n\r\n    fun showAcercaDeInfo(){\r\n        var dialog = Dialog(requireContext())\r\n        val layout:View = layoutInflater.inflate(R.layout.acercadedialog, null)\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialog.setContentView(layout)\r\n        dialog.show()\r\n        dialog.window!!.setLayout(\r\n            900, 1400\r\n        )\r\n    }\r\n\r\n    fun showModoAdminDialog(){\r\n        val builder: AlertDialog.Builder = android.app.AlertDialog.Builder(requireContext())\r\n        builder.setView(R.layout.admin_login_dialog)\r\n\r\n        val dialog = builder.create()\r\n\r\n\r\n        dialog.show()\r\n\r\n        val txtAdmin: TextView = dialog.findViewById(R.id.txtPassword)\r\n        val btnCancel: TextView = dialog.findViewById(R.id.adminCancel)\r\n        val btnLogin: TextView = dialog.findViewById(R.id.adminLogin)\r\n        val txtInfo: TextView = dialog.findViewById(R.id.adminDialogInfoText)\r\n\r\n        if (!DbHandler.getAdmin()) {\r\n            txtAdmin.visibility = View.VISIBLE\r\n            txtInfo.visibility = View.VISIBLE\r\n            btnLogin.setBackgroundColor(getResources().getColor(R.color.primary))\r\n        } else {\r\n            txtInfo.visibility = View.GONE\r\n            txtAdmin.visibility = View.GONE\r\n            btnLogin.text = \"LOGOUT\"\r\n            btnLogin.setBackgroundColor(getResources().getColor(R.color.red))\r\n        }\r\n\r\n        btnCancel.setOnClickListener() {\r\n            dialog.dismiss()\r\n        }\r\n\r\n        btnLogin.setOnClickListener() {\r\n            if (!DbHandler.getAdmin()) {\r\n                if (pass.equals(txtAdmin.text.toString())) {\r\n                    DbHandler.setAdmin(true)\r\n                    Toast.makeText(requireContext(), \"Modo Administrador activado correctamente\", Toast.LENGTH_SHORT).show()\r\n                    dialog.dismiss()\r\n                } else {\r\n                    Toast.makeText(requireContext(), \"Error al activar el modo administrador\", Toast.LENGTH_SHORT).show()\r\n                }\r\n            } else {\r\n                DbHandler.setAdmin(false)\r\n                dialog.dismiss()\r\n                Toast.makeText(requireContext(), \"Modo Administrador desactivado correctamente\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n\r\n        //dialog.window?.setBackgroundDrawableResource(android.R.color.transparent)\r\n\r\n        /*\r\n        var dialog: Dialog = Dialog(requireContext())\r\n        dialog.setContentView(R.layout.admin_login_dialog)\r\n        //dialog.window.setBackgroundDrawable(getDrawable())\r\n        dialog.window?.setLayout(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT)\r\n        dialog.setCancelable(false)\r\n        dialog.window?.attributes?.windowAnimations = R.style.animation\r\n\r\n         */\r\n\r\n\r\n        /*\r\n        val builder: AlertDialog.Builder = android.app.AlertDialog.Builder(requireContext())\r\n        builder.setTitle(\"Modo Administrador\")\r\n        val input = EditText(requireContext())\r\n        input.setHint(\"Ingrese la contraseña de administrador\")\r\n        input.inputType = InputType.TYPE_TEXT_VARIATION_PASSWORD\r\n        input.setTransformationMethod(PasswordTransformationMethod.getInstance());\r\n        builder.setView(input)\r\n\r\n        builder.setPositiveButton(\"Logear\", DialogInterface.OnClickListener { dialog, which ->\r\n            //var m_Text = input.text.toString()\r\n            if (pass.equals(input.text.toString())) {\r\n                DbHandler.setAdmin()\r\n                Toast.makeText(requireContext(), \"Modo Administrador activado correctamente\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                Toast.makeText(requireContext(), \"Error al activar el modo administrador\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        })\r\n        builder.setNegativeButton(\"Cancelar\", DialogInterface.OnClickListener { dialog, which -> dialog.cancel() })\r\n        builder.show()\r\n\r\n         */\r\n    }\r\n\r\n\r\n\r\n    companion object {\r\n        /**\r\n         * Use this factory method to create a new instance of\r\n         * this fragment using the provided parameters.\r\n         *\r\n         * @param param1 Parameter 1.\r\n         * @param param2 Parameter 2.\r\n         * @return A new instance of fragment Fragment5_ajustes.\r\n         */\r\n        // TODO: Rename and change types and number of parameters\r\n        @JvmStatic\r\n        fun newInstance(param1: String, param2: String) =\r\n            Fragment5_ajustes().apply {\r\n                arguments = Bundle().apply {\r\n                    putString(ARG_PARAM1, param1)\r\n                    putString(ARG_PARAM2, param2)\r\n                }\r\n            }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/didaktikapp/fragments/Fragment5_ajustes.kt b/app/src/main/java/com/example/didaktikapp/fragments/Fragment5_ajustes.kt
--- a/app/src/main/java/com/example/didaktikapp/fragments/Fragment5_ajustes.kt	
+++ b/app/src/main/java/com/example/didaktikapp/fragments/Fragment5_ajustes.kt	
@@ -71,7 +71,7 @@
         }
 
         buttonTheme.setOnClickListener{
-            chooseThemeDialog(view)
+            chooseThemeDialog()
 
         }
 
@@ -85,7 +85,7 @@
     }
 
 
-          fun chooseThemeDialog(view:View){
+          fun chooseThemeDialog(){
 
               val builder = AlertDialog.Builder(requireContext())
               builder.setTitle(getString(R.string.tema))
@@ -107,8 +107,6 @@
                           MyPreferences(requireContext()).darkMode = 1
                           ( requireContext() as  AppCompatActivity).delegate.applyDayNight()
 
-
-
                           dialog.dismiss()
                       }
 
@@ -142,7 +140,6 @@
     fun chooseLanguageDialog() {
 
 
-
         val spanish = getString(R.string.español)
         val euskera = getString(R.string.euskera)
 
